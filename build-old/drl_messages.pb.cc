// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: drl_messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "drl_messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DRL_MESSAGES {

namespace {

const ::google::protobuf::Descriptor* drl_unimessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  drl_unimessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* drl_unimessage_GeneralStatePart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  drl_unimessage_GeneralStatePart_reflection_ = NULL;
const ::google::protobuf::Descriptor* drl_unimessage_Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  drl_unimessage_Action_reflection_ = NULL;
const ::google::protobuf::Descriptor* drl_unimessage_RLstate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  drl_unimessage_RLstate_reflection_ = NULL;
const ::google::protobuf::Descriptor* drl_unimessage_Dimension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  drl_unimessage_Dimension_reflection_ = NULL;
const ::google::protobuf::Descriptor* drl_unimessage_Dimension_Component_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  drl_unimessage_Dimension_Component_reflection_ = NULL;
const ::google::protobuf::Descriptor* drl_unimessage_RewardTerminal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  drl_unimessage_RewardTerminal_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* drl_unimessage_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_drl_5fmessages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_drl_5fmessages_2eproto() {
  protobuf_AddDesc_drl_5fmessages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "drl_messages.proto");
  GOOGLE_CHECK(file != NULL);
  drl_unimessage_descriptor_ = file->message_type(0);
  static const int drl_unimessage_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, time_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, statepart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, rlstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, msgstr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, dimension_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, rwt_),
  };
  drl_unimessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      drl_unimessage_descriptor_,
      drl_unimessage::default_instance_,
      drl_unimessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(drl_unimessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage, _internal_metadata_),
      -1);
  drl_unimessage_GeneralStatePart_descriptor_ = drl_unimessage_descriptor_->nested_type(0);
  static const int drl_unimessage_GeneralStatePart_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_GeneralStatePart, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_GeneralStatePart, first_derivative_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_GeneralStatePart, second_derivative_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_GeneralStatePart, third_deriavtive_),
  };
  drl_unimessage_GeneralStatePart_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      drl_unimessage_GeneralStatePart_descriptor_,
      drl_unimessage_GeneralStatePart::default_instance_,
      drl_unimessage_GeneralStatePart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_GeneralStatePart, _has_bits_[0]),
      -1,
      -1,
      sizeof(drl_unimessage_GeneralStatePart),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_GeneralStatePart, _internal_metadata_),
      -1);
  drl_unimessage_Action_descriptor_ = drl_unimessage_descriptor_->nested_type(1);
  static const int drl_unimessage_Action_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Action, actions_),
  };
  drl_unimessage_Action_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      drl_unimessage_Action_descriptor_,
      drl_unimessage_Action::default_instance_,
      drl_unimessage_Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Action, _has_bits_[0]),
      -1,
      -1,
      sizeof(drl_unimessage_Action),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Action, _internal_metadata_),
      -1);
  drl_unimessage_RLstate_descriptor_ = drl_unimessage_descriptor_->nested_type(2);
  static const int drl_unimessage_RLstate_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RLstate, sequence_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RLstate, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RLstate, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RLstate, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RLstate, observation_),
  };
  drl_unimessage_RLstate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      drl_unimessage_RLstate_descriptor_,
      drl_unimessage_RLstate::default_instance_,
      drl_unimessage_RLstate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RLstate, _has_bits_[0]),
      -1,
      -1,
      sizeof(drl_unimessage_RLstate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RLstate, _internal_metadata_),
      -1);
  drl_unimessage_Dimension_descriptor_ = drl_unimessage_descriptor_->nested_type(3);
  static const int drl_unimessage_Dimension_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Dimension, component_),
  };
  drl_unimessage_Dimension_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      drl_unimessage_Dimension_descriptor_,
      drl_unimessage_Dimension::default_instance_,
      drl_unimessage_Dimension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Dimension, _has_bits_[0]),
      -1,
      -1,
      sizeof(drl_unimessage_Dimension),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Dimension, _internal_metadata_),
      -1);
  drl_unimessage_Dimension_Component_descriptor_ = drl_unimessage_Dimension_descriptor_->nested_type(0);
  static const int drl_unimessage_Dimension_Component_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Dimension_Component, component_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Dimension_Component, component_dimension_),
  };
  drl_unimessage_Dimension_Component_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      drl_unimessage_Dimension_Component_descriptor_,
      drl_unimessage_Dimension_Component::default_instance_,
      drl_unimessage_Dimension_Component_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Dimension_Component, _has_bits_[0]),
      -1,
      -1,
      sizeof(drl_unimessage_Dimension_Component),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_Dimension_Component, _internal_metadata_),
      -1);
  drl_unimessage_RewardTerminal_descriptor_ = drl_unimessage_descriptor_->nested_type(4);
  static const int drl_unimessage_RewardTerminal_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RewardTerminal, reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RewardTerminal, terminal_),
  };
  drl_unimessage_RewardTerminal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      drl_unimessage_RewardTerminal_descriptor_,
      drl_unimessage_RewardTerminal::default_instance_,
      drl_unimessage_RewardTerminal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RewardTerminal, _has_bits_[0]),
      -1,
      -1,
      sizeof(drl_unimessage_RewardTerminal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(drl_unimessage_RewardTerminal, _internal_metadata_),
      -1);
  drl_unimessage_Type_descriptor_ = drl_unimessage_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_drl_5fmessages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      drl_unimessage_descriptor_, &drl_unimessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      drl_unimessage_GeneralStatePart_descriptor_, &drl_unimessage_GeneralStatePart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      drl_unimessage_Action_descriptor_, &drl_unimessage_Action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      drl_unimessage_RLstate_descriptor_, &drl_unimessage_RLstate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      drl_unimessage_Dimension_descriptor_, &drl_unimessage_Dimension::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      drl_unimessage_Dimension_Component_descriptor_, &drl_unimessage_Dimension_Component::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      drl_unimessage_RewardTerminal_descriptor_, &drl_unimessage_RewardTerminal::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_drl_5fmessages_2eproto() {
  delete drl_unimessage::default_instance_;
  delete drl_unimessage_reflection_;
  delete drl_unimessage_GeneralStatePart::default_instance_;
  delete drl_unimessage_GeneralStatePart_reflection_;
  delete drl_unimessage_Action::default_instance_;
  delete drl_unimessage_Action_reflection_;
  delete drl_unimessage_RLstate::default_instance_;
  delete drl_unimessage_RLstate_reflection_;
  delete drl_unimessage_Dimension::default_instance_;
  delete drl_unimessage_Dimension_reflection_;
  delete drl_unimessage_Dimension_Component::default_instance_;
  delete drl_unimessage_Dimension_Component_reflection_;
  delete drl_unimessage_RewardTerminal::default_instance_;
  delete drl_unimessage_RewardTerminal_reflection_;
}

void protobuf_AddDesc_drl_5fmessages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_drl_5fmessages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022drl_messages.proto\022\014DRL_MESSAGES\"\351\007\n\016d"
    "rl_unimessage\022/\n\004type\030\001 \002(\0162!.DRL_MESSAG"
    "ES.drl_unimessage.Type\022\022\n\ntime_index\030\002 \002"
    "(\005\022\014\n\004name\030\003 \001(\t\022@\n\tstatepart\030\004 \001(\0132-.DR"
    "L_MESSAGES.drl_unimessage.GeneralStatePa"
    "rt\0223\n\006action\030\005 \001(\0132#.DRL_MESSAGES.drl_un"
    "imessage.Action\0225\n\007rlstate\030\006 \001(\0132$.DRL_M"
    "ESSAGES.drl_unimessage.RLstate\022\016\n\006msgstr"
    "\030\007 \001(\t\0229\n\tdimension\030\010 \001(\0132&.DRL_MESSAGES"
    ".drl_unimessage.Dimension\0228\n\003rwt\030\t \001(\0132+"
    ".DRL_MESSAGES.drl_unimessage.RewardTermi"
    "nal\032p\n\020GeneralStatePart\022\r\n\005state\030\001 \003(\002\022\030"
    "\n\020first_derivative\030\002 \003(\002\022\031\n\021second_deriv"
    "ative\030\003 \003(\002\022\030\n\020third_deriavtive\030\004 \003(\002\032\031\n"
    "\006Action\022\017\n\007actions\030\001 \003(\002\032\224\001\n\007RLstate\022\026\n\016"
    "sequence_index\030\001 \001(\005\022\r\n\005state\030\002 \003(\002\022\016\n\006a"
    "ction\030\003 \003(\002\022\016\n\006reward\030\004 \001(\002\022B\n\013observati"
    "on\030\005 \003(\0132-.DRL_MESSAGES.drl_unimessage.G"
    "eneralStatePart\032\222\001\n\tDimension\022C\n\tcompone"
    "nt\030\001 \003(\01320.DRL_MESSAGES.drl_unimessage.D"
    "imension.Component\032@\n\tComponent\022\026\n\016compo"
    "nent_name\030\001 \002(\t\022\033\n\023component_dimension\030\002"
    " \003(\005\0322\n\016RewardTerminal\022\016\n\006reward\030\001 \002(\002\022\020"
    "\n\010terminal\030\002 \002(\005\"d\n\004Type\022\r\n\tSTATEPART\020\001\022"
    "\021\n\rCONTROLACTION\020\002\022\013\n\007RLSTATE\020\003\022\n\n\006MESST"
    "R\020\004\022\r\n\tDIMENSION\020\005\022\022\n\016REWARDTERMINAL\020\006", 1038);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "drl_messages.proto", &protobuf_RegisterTypes);
  drl_unimessage::default_instance_ = new drl_unimessage();
  drl_unimessage_GeneralStatePart::default_instance_ = new drl_unimessage_GeneralStatePart();
  drl_unimessage_Action::default_instance_ = new drl_unimessage_Action();
  drl_unimessage_RLstate::default_instance_ = new drl_unimessage_RLstate();
  drl_unimessage_Dimension::default_instance_ = new drl_unimessage_Dimension();
  drl_unimessage_Dimension_Component::default_instance_ = new drl_unimessage_Dimension_Component();
  drl_unimessage_RewardTerminal::default_instance_ = new drl_unimessage_RewardTerminal();
  drl_unimessage::default_instance_->InitAsDefaultInstance();
  drl_unimessage_GeneralStatePart::default_instance_->InitAsDefaultInstance();
  drl_unimessage_Action::default_instance_->InitAsDefaultInstance();
  drl_unimessage_RLstate::default_instance_->InitAsDefaultInstance();
  drl_unimessage_Dimension::default_instance_->InitAsDefaultInstance();
  drl_unimessage_Dimension_Component::default_instance_->InitAsDefaultInstance();
  drl_unimessage_RewardTerminal::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_drl_5fmessages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_drl_5fmessages_2eproto {
  StaticDescriptorInitializer_drl_5fmessages_2eproto() {
    protobuf_AddDesc_drl_5fmessages_2eproto();
  }
} static_descriptor_initializer_drl_5fmessages_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* drl_unimessage_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return drl_unimessage_Type_descriptor_;
}
bool drl_unimessage_Type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const drl_unimessage_Type drl_unimessage::STATEPART;
const drl_unimessage_Type drl_unimessage::CONTROLACTION;
const drl_unimessage_Type drl_unimessage::RLSTATE;
const drl_unimessage_Type drl_unimessage::MESSTR;
const drl_unimessage_Type drl_unimessage::DIMENSION;
const drl_unimessage_Type drl_unimessage::REWARDTERMINAL;
const drl_unimessage_Type drl_unimessage::Type_MIN;
const drl_unimessage_Type drl_unimessage::Type_MAX;
const int drl_unimessage::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int drl_unimessage_GeneralStatePart::kStateFieldNumber;
const int drl_unimessage_GeneralStatePart::kFirstDerivativeFieldNumber;
const int drl_unimessage_GeneralStatePart::kSecondDerivativeFieldNumber;
const int drl_unimessage_GeneralStatePart::kThirdDeriavtiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

drl_unimessage_GeneralStatePart::drl_unimessage_GeneralStatePart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
}

void drl_unimessage_GeneralStatePart::InitAsDefaultInstance() {
}

drl_unimessage_GeneralStatePart::drl_unimessage_GeneralStatePart(const drl_unimessage_GeneralStatePart& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
}

void drl_unimessage_GeneralStatePart::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

drl_unimessage_GeneralStatePart::~drl_unimessage_GeneralStatePart() {
  // @@protoc_insertion_point(destructor:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  SharedDtor();
}

void drl_unimessage_GeneralStatePart::SharedDtor() {
  if (this != default_instance_) {
  }
}

void drl_unimessage_GeneralStatePart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* drl_unimessage_GeneralStatePart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return drl_unimessage_GeneralStatePart_descriptor_;
}

const drl_unimessage_GeneralStatePart& drl_unimessage_GeneralStatePart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drl_5fmessages_2eproto();
  return *default_instance_;
}

drl_unimessage_GeneralStatePart* drl_unimessage_GeneralStatePart::default_instance_ = NULL;

drl_unimessage_GeneralStatePart* drl_unimessage_GeneralStatePart::New(::google::protobuf::Arena* arena) const {
  drl_unimessage_GeneralStatePart* n = new drl_unimessage_GeneralStatePart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void drl_unimessage_GeneralStatePart::Clear() {
// @@protoc_insertion_point(message_clear_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  state_.Clear();
  first_derivative_.Clear();
  second_derivative_.Clear();
  third_deriavtive_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool drl_unimessage_GeneralStatePart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float state = 1;
      case 1: {
        if (tag == 13) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_state())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_state())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_state;
        if (input->ExpectTag(21)) goto parse_first_derivative;
        break;
      }

      // repeated float first_derivative = 2;
      case 2: {
        if (tag == 21) {
         parse_first_derivative:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21, input, this->mutable_first_derivative())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_first_derivative())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_first_derivative;
        if (input->ExpectTag(29)) goto parse_second_derivative;
        break;
      }

      // repeated float second_derivative = 3;
      case 3: {
        if (tag == 29) {
         parse_second_derivative:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29, input, this->mutable_second_derivative())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_second_derivative())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_second_derivative;
        if (input->ExpectTag(37)) goto parse_third_deriavtive;
        break;
      }

      // repeated float third_deriavtive = 4;
      case 4: {
        if (tag == 37) {
         parse_third_deriavtive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37, input, this->mutable_third_deriavtive())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_third_deriavtive())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_third_deriavtive;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  return false;
#undef DO_
}

void drl_unimessage_GeneralStatePart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  // repeated float state = 1;
  for (int i = 0; i < this->state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->state(i), output);
  }

  // repeated float first_derivative = 2;
  for (int i = 0; i < this->first_derivative_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->first_derivative(i), output);
  }

  // repeated float second_derivative = 3;
  for (int i = 0; i < this->second_derivative_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->second_derivative(i), output);
  }

  // repeated float third_deriavtive = 4;
  for (int i = 0; i < this->third_deriavtive_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->third_deriavtive(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
}

::google::protobuf::uint8* drl_unimessage_GeneralStatePart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  // repeated float state = 1;
  for (int i = 0; i < this->state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->state(i), target);
  }

  // repeated float first_derivative = 2;
  for (int i = 0; i < this->first_derivative_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(2, this->first_derivative(i), target);
  }

  // repeated float second_derivative = 3;
  for (int i = 0; i < this->second_derivative_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(3, this->second_derivative(i), target);
  }

  // repeated float third_deriavtive = 4;
  for (int i = 0; i < this->third_deriavtive_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(4, this->third_deriavtive(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  return target;
}

int drl_unimessage_GeneralStatePart::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  int total_size = 0;

  // repeated float state = 1;
  {
    int data_size = 0;
    data_size = 4 * this->state_size();
    total_size += 1 * this->state_size() + data_size;
  }

  // repeated float first_derivative = 2;
  {
    int data_size = 0;
    data_size = 4 * this->first_derivative_size();
    total_size += 1 * this->first_derivative_size() + data_size;
  }

  // repeated float second_derivative = 3;
  {
    int data_size = 0;
    data_size = 4 * this->second_derivative_size();
    total_size += 1 * this->second_derivative_size() + data_size;
  }

  // repeated float third_deriavtive = 4;
  {
    int data_size = 0;
    data_size = 4 * this->third_deriavtive_size();
    total_size += 1 * this->third_deriavtive_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void drl_unimessage_GeneralStatePart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const drl_unimessage_GeneralStatePart* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const drl_unimessage_GeneralStatePart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
    MergeFrom(*source);
  }
}

void drl_unimessage_GeneralStatePart::MergeFrom(const drl_unimessage_GeneralStatePart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  state_.MergeFrom(from.state_);
  first_derivative_.MergeFrom(from.first_derivative_);
  second_derivative_.MergeFrom(from.second_derivative_);
  third_deriavtive_.MergeFrom(from.third_deriavtive_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void drl_unimessage_GeneralStatePart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void drl_unimessage_GeneralStatePart::CopyFrom(const drl_unimessage_GeneralStatePart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DRL_MESSAGES.drl_unimessage.GeneralStatePart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drl_unimessage_GeneralStatePart::IsInitialized() const {

  return true;
}

void drl_unimessage_GeneralStatePart::Swap(drl_unimessage_GeneralStatePart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void drl_unimessage_GeneralStatePart::InternalSwap(drl_unimessage_GeneralStatePart* other) {
  state_.UnsafeArenaSwap(&other->state_);
  first_derivative_.UnsafeArenaSwap(&other->first_derivative_);
  second_derivative_.UnsafeArenaSwap(&other->second_derivative_);
  third_deriavtive_.UnsafeArenaSwap(&other->third_deriavtive_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata drl_unimessage_GeneralStatePart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = drl_unimessage_GeneralStatePart_descriptor_;
  metadata.reflection = drl_unimessage_GeneralStatePart_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int drl_unimessage_Action::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

drl_unimessage_Action::drl_unimessage_Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DRL_MESSAGES.drl_unimessage.Action)
}

void drl_unimessage_Action::InitAsDefaultInstance() {
}

drl_unimessage_Action::drl_unimessage_Action(const drl_unimessage_Action& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DRL_MESSAGES.drl_unimessage.Action)
}

void drl_unimessage_Action::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

drl_unimessage_Action::~drl_unimessage_Action() {
  // @@protoc_insertion_point(destructor:DRL_MESSAGES.drl_unimessage.Action)
  SharedDtor();
}

void drl_unimessage_Action::SharedDtor() {
  if (this != default_instance_) {
  }
}

void drl_unimessage_Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* drl_unimessage_Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return drl_unimessage_Action_descriptor_;
}

const drl_unimessage_Action& drl_unimessage_Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drl_5fmessages_2eproto();
  return *default_instance_;
}

drl_unimessage_Action* drl_unimessage_Action::default_instance_ = NULL;

drl_unimessage_Action* drl_unimessage_Action::New(::google::protobuf::Arena* arena) const {
  drl_unimessage_Action* n = new drl_unimessage_Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void drl_unimessage_Action::Clear() {
// @@protoc_insertion_point(message_clear_start:DRL_MESSAGES.drl_unimessage.Action)
  actions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool drl_unimessage_Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DRL_MESSAGES.drl_unimessage.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float actions = 1;
      case 1: {
        if (tag == 13) {
         parse_actions:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 13, input, this->mutable_actions())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_actions())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(13)) goto parse_actions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DRL_MESSAGES.drl_unimessage.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DRL_MESSAGES.drl_unimessage.Action)
  return false;
#undef DO_
}

void drl_unimessage_Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DRL_MESSAGES.drl_unimessage.Action)
  // repeated float actions = 1;
  for (int i = 0; i < this->actions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      1, this->actions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DRL_MESSAGES.drl_unimessage.Action)
}

::google::protobuf::uint8* drl_unimessage_Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DRL_MESSAGES.drl_unimessage.Action)
  // repeated float actions = 1;
  for (int i = 0; i < this->actions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(1, this->actions(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DRL_MESSAGES.drl_unimessage.Action)
  return target;
}

int drl_unimessage_Action::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DRL_MESSAGES.drl_unimessage.Action)
  int total_size = 0;

  // repeated float actions = 1;
  {
    int data_size = 0;
    data_size = 4 * this->actions_size();
    total_size += 1 * this->actions_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void drl_unimessage_Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DRL_MESSAGES.drl_unimessage.Action)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const drl_unimessage_Action* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const drl_unimessage_Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DRL_MESSAGES.drl_unimessage.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DRL_MESSAGES.drl_unimessage.Action)
    MergeFrom(*source);
  }
}

void drl_unimessage_Action::MergeFrom(const drl_unimessage_Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DRL_MESSAGES.drl_unimessage.Action)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  actions_.MergeFrom(from.actions_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void drl_unimessage_Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DRL_MESSAGES.drl_unimessage.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void drl_unimessage_Action::CopyFrom(const drl_unimessage_Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DRL_MESSAGES.drl_unimessage.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drl_unimessage_Action::IsInitialized() const {

  return true;
}

void drl_unimessage_Action::Swap(drl_unimessage_Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void drl_unimessage_Action::InternalSwap(drl_unimessage_Action* other) {
  actions_.UnsafeArenaSwap(&other->actions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata drl_unimessage_Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = drl_unimessage_Action_descriptor_;
  metadata.reflection = drl_unimessage_Action_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int drl_unimessage_RLstate::kSequenceIndexFieldNumber;
const int drl_unimessage_RLstate::kStateFieldNumber;
const int drl_unimessage_RLstate::kActionFieldNumber;
const int drl_unimessage_RLstate::kRewardFieldNumber;
const int drl_unimessage_RLstate::kObservationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

drl_unimessage_RLstate::drl_unimessage_RLstate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DRL_MESSAGES.drl_unimessage.RLstate)
}

void drl_unimessage_RLstate::InitAsDefaultInstance() {
}

drl_unimessage_RLstate::drl_unimessage_RLstate(const drl_unimessage_RLstate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DRL_MESSAGES.drl_unimessage.RLstate)
}

void drl_unimessage_RLstate::SharedCtor() {
  _cached_size_ = 0;
  sequence_index_ = 0;
  reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

drl_unimessage_RLstate::~drl_unimessage_RLstate() {
  // @@protoc_insertion_point(destructor:DRL_MESSAGES.drl_unimessage.RLstate)
  SharedDtor();
}

void drl_unimessage_RLstate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void drl_unimessage_RLstate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* drl_unimessage_RLstate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return drl_unimessage_RLstate_descriptor_;
}

const drl_unimessage_RLstate& drl_unimessage_RLstate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drl_5fmessages_2eproto();
  return *default_instance_;
}

drl_unimessage_RLstate* drl_unimessage_RLstate::default_instance_ = NULL;

drl_unimessage_RLstate* drl_unimessage_RLstate::New(::google::protobuf::Arena* arena) const {
  drl_unimessage_RLstate* n = new drl_unimessage_RLstate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void drl_unimessage_RLstate::Clear() {
// @@protoc_insertion_point(message_clear_start:DRL_MESSAGES.drl_unimessage.RLstate)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(drl_unimessage_RLstate, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<drl_unimessage_RLstate*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(sequence_index_, reward_);

#undef ZR_HELPER_
#undef ZR_

  state_.Clear();
  action_.Clear();
  observation_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool drl_unimessage_RLstate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DRL_MESSAGES.drl_unimessage.RLstate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sequence_index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_index_)));
          set_has_sequence_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_state;
        break;
      }

      // repeated float state = 2;
      case 2: {
        if (tag == 21) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21, input, this->mutable_state())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_state())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_state;
        if (input->ExpectTag(29)) goto parse_action;
        break;
      }

      // repeated float action = 3;
      case 3: {
        if (tag == 29) {
         parse_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 29, input, this->mutable_action())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_action())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_action;
        if (input->ExpectTag(37)) goto parse_reward;
        break;
      }

      // optional float reward = 4;
      case 4: {
        if (tag == 37) {
         parse_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reward_)));
          set_has_reward();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_observation;
        break;
      }

      // repeated .DRL_MESSAGES.drl_unimessage.GeneralStatePart observation = 5;
      case 5: {
        if (tag == 42) {
         parse_observation:
          DO_(input->IncrementRecursionDepth());
         parse_loop_observation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_observation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_observation;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DRL_MESSAGES.drl_unimessage.RLstate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DRL_MESSAGES.drl_unimessage.RLstate)
  return false;
#undef DO_
}

void drl_unimessage_RLstate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DRL_MESSAGES.drl_unimessage.RLstate)
  // optional int32 sequence_index = 1;
  if (has_sequence_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sequence_index(), output);
  }

  // repeated float state = 2;
  for (int i = 0; i < this->state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->state(i), output);
  }

  // repeated float action = 3;
  for (int i = 0; i < this->action_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      3, this->action(i), output);
  }

  // optional float reward = 4;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->reward(), output);
  }

  // repeated .DRL_MESSAGES.drl_unimessage.GeneralStatePart observation = 5;
  for (unsigned int i = 0, n = this->observation_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->observation(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DRL_MESSAGES.drl_unimessage.RLstate)
}

::google::protobuf::uint8* drl_unimessage_RLstate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DRL_MESSAGES.drl_unimessage.RLstate)
  // optional int32 sequence_index = 1;
  if (has_sequence_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sequence_index(), target);
  }

  // repeated float state = 2;
  for (int i = 0; i < this->state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(2, this->state(i), target);
  }

  // repeated float action = 3;
  for (int i = 0; i < this->action_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(3, this->action(i), target);
  }

  // optional float reward = 4;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->reward(), target);
  }

  // repeated .DRL_MESSAGES.drl_unimessage.GeneralStatePart observation = 5;
  for (unsigned int i = 0, n = this->observation_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->observation(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DRL_MESSAGES.drl_unimessage.RLstate)
  return target;
}

int drl_unimessage_RLstate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DRL_MESSAGES.drl_unimessage.RLstate)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 9u) {
    // optional int32 sequence_index = 1;
    if (has_sequence_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sequence_index());
    }

    // optional float reward = 4;
    if (has_reward()) {
      total_size += 1 + 4;
    }

  }
  // repeated float state = 2;
  {
    int data_size = 0;
    data_size = 4 * this->state_size();
    total_size += 1 * this->state_size() + data_size;
  }

  // repeated float action = 3;
  {
    int data_size = 0;
    data_size = 4 * this->action_size();
    total_size += 1 * this->action_size() + data_size;
  }

  // repeated .DRL_MESSAGES.drl_unimessage.GeneralStatePart observation = 5;
  total_size += 1 * this->observation_size();
  for (int i = 0; i < this->observation_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->observation(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void drl_unimessage_RLstate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DRL_MESSAGES.drl_unimessage.RLstate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const drl_unimessage_RLstate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const drl_unimessage_RLstate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DRL_MESSAGES.drl_unimessage.RLstate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DRL_MESSAGES.drl_unimessage.RLstate)
    MergeFrom(*source);
  }
}

void drl_unimessage_RLstate::MergeFrom(const drl_unimessage_RLstate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DRL_MESSAGES.drl_unimessage.RLstate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  state_.MergeFrom(from.state_);
  action_.MergeFrom(from.action_);
  observation_.MergeFrom(from.observation_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sequence_index()) {
      set_sequence_index(from.sequence_index());
    }
    if (from.has_reward()) {
      set_reward(from.reward());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void drl_unimessage_RLstate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DRL_MESSAGES.drl_unimessage.RLstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void drl_unimessage_RLstate::CopyFrom(const drl_unimessage_RLstate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DRL_MESSAGES.drl_unimessage.RLstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drl_unimessage_RLstate::IsInitialized() const {

  return true;
}

void drl_unimessage_RLstate::Swap(drl_unimessage_RLstate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void drl_unimessage_RLstate::InternalSwap(drl_unimessage_RLstate* other) {
  std::swap(sequence_index_, other->sequence_index_);
  state_.UnsafeArenaSwap(&other->state_);
  action_.UnsafeArenaSwap(&other->action_);
  std::swap(reward_, other->reward_);
  observation_.UnsafeArenaSwap(&other->observation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata drl_unimessage_RLstate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = drl_unimessage_RLstate_descriptor_;
  metadata.reflection = drl_unimessage_RLstate_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int drl_unimessage_Dimension_Component::kComponentNameFieldNumber;
const int drl_unimessage_Dimension_Component::kComponentDimensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

drl_unimessage_Dimension_Component::drl_unimessage_Dimension_Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DRL_MESSAGES.drl_unimessage.Dimension.Component)
}

void drl_unimessage_Dimension_Component::InitAsDefaultInstance() {
}

drl_unimessage_Dimension_Component::drl_unimessage_Dimension_Component(const drl_unimessage_Dimension_Component& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DRL_MESSAGES.drl_unimessage.Dimension.Component)
}

void drl_unimessage_Dimension_Component::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  component_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

drl_unimessage_Dimension_Component::~drl_unimessage_Dimension_Component() {
  // @@protoc_insertion_point(destructor:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  SharedDtor();
}

void drl_unimessage_Dimension_Component::SharedDtor() {
  component_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void drl_unimessage_Dimension_Component::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* drl_unimessage_Dimension_Component::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return drl_unimessage_Dimension_Component_descriptor_;
}

const drl_unimessage_Dimension_Component& drl_unimessage_Dimension_Component::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drl_5fmessages_2eproto();
  return *default_instance_;
}

drl_unimessage_Dimension_Component* drl_unimessage_Dimension_Component::default_instance_ = NULL;

drl_unimessage_Dimension_Component* drl_unimessage_Dimension_Component::New(::google::protobuf::Arena* arena) const {
  drl_unimessage_Dimension_Component* n = new drl_unimessage_Dimension_Component;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void drl_unimessage_Dimension_Component::Clear() {
// @@protoc_insertion_point(message_clear_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  if (has_component_name()) {
    component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  component_dimension_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool drl_unimessage_Dimension_Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string component_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->component_name().data(), this->component_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_component_dimension;
        break;
      }

      // repeated int32 component_dimension = 2;
      case 2: {
        if (tag == 16) {
         parse_component_dimension:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_component_dimension())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_component_dimension())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_component_dimension;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  return false;
#undef DO_
}

void drl_unimessage_Dimension_Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  // required string component_name = 1;
  if (has_component_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_name().data(), this->component_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->component_name(), output);
  }

  // repeated int32 component_dimension = 2;
  for (int i = 0; i < this->component_dimension_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->component_dimension(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DRL_MESSAGES.drl_unimessage.Dimension.Component)
}

::google::protobuf::uint8* drl_unimessage_Dimension_Component::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  // required string component_name = 1;
  if (has_component_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component_name().data(), this->component_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->component_name(), target);
  }

  // repeated int32 component_dimension = 2;
  for (int i = 0; i < this->component_dimension_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->component_dimension(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  return target;
}

int drl_unimessage_Dimension_Component::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  int total_size = 0;

  // required string component_name = 1;
  if (has_component_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component_name());
  }
  // repeated int32 component_dimension = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->component_dimension_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->component_dimension(i));
    }
    total_size += 1 * this->component_dimension_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void drl_unimessage_Dimension_Component::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const drl_unimessage_Dimension_Component* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const drl_unimessage_Dimension_Component>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DRL_MESSAGES.drl_unimessage.Dimension.Component)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DRL_MESSAGES.drl_unimessage.Dimension.Component)
    MergeFrom(*source);
  }
}

void drl_unimessage_Dimension_Component::MergeFrom(const drl_unimessage_Dimension_Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  component_dimension_.MergeFrom(from.component_dimension_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_component_name()) {
      set_has_component_name();
      component_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void drl_unimessage_Dimension_Component::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void drl_unimessage_Dimension_Component::CopyFrom(const drl_unimessage_Dimension_Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DRL_MESSAGES.drl_unimessage.Dimension.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drl_unimessage_Dimension_Component::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void drl_unimessage_Dimension_Component::Swap(drl_unimessage_Dimension_Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void drl_unimessage_Dimension_Component::InternalSwap(drl_unimessage_Dimension_Component* other) {
  component_name_.Swap(&other->component_name_);
  component_dimension_.UnsafeArenaSwap(&other->component_dimension_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata drl_unimessage_Dimension_Component::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = drl_unimessage_Dimension_Component_descriptor_;
  metadata.reflection = drl_unimessage_Dimension_Component_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int drl_unimessage_Dimension::kComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

drl_unimessage_Dimension::drl_unimessage_Dimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DRL_MESSAGES.drl_unimessage.Dimension)
}

void drl_unimessage_Dimension::InitAsDefaultInstance() {
}

drl_unimessage_Dimension::drl_unimessage_Dimension(const drl_unimessage_Dimension& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DRL_MESSAGES.drl_unimessage.Dimension)
}

void drl_unimessage_Dimension::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

drl_unimessage_Dimension::~drl_unimessage_Dimension() {
  // @@protoc_insertion_point(destructor:DRL_MESSAGES.drl_unimessage.Dimension)
  SharedDtor();
}

void drl_unimessage_Dimension::SharedDtor() {
  if (this != default_instance_) {
  }
}

void drl_unimessage_Dimension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* drl_unimessage_Dimension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return drl_unimessage_Dimension_descriptor_;
}

const drl_unimessage_Dimension& drl_unimessage_Dimension::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drl_5fmessages_2eproto();
  return *default_instance_;
}

drl_unimessage_Dimension* drl_unimessage_Dimension::default_instance_ = NULL;

drl_unimessage_Dimension* drl_unimessage_Dimension::New(::google::protobuf::Arena* arena) const {
  drl_unimessage_Dimension* n = new drl_unimessage_Dimension;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void drl_unimessage_Dimension::Clear() {
// @@protoc_insertion_point(message_clear_start:DRL_MESSAGES.drl_unimessage.Dimension)
  component_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool drl_unimessage_Dimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DRL_MESSAGES.drl_unimessage.Dimension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DRL_MESSAGES.drl_unimessage.Dimension.Component component = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_component()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_component;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DRL_MESSAGES.drl_unimessage.Dimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DRL_MESSAGES.drl_unimessage.Dimension)
  return false;
#undef DO_
}

void drl_unimessage_Dimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DRL_MESSAGES.drl_unimessage.Dimension)
  // repeated .DRL_MESSAGES.drl_unimessage.Dimension.Component component = 1;
  for (unsigned int i = 0, n = this->component_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->component(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DRL_MESSAGES.drl_unimessage.Dimension)
}

::google::protobuf::uint8* drl_unimessage_Dimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DRL_MESSAGES.drl_unimessage.Dimension)
  // repeated .DRL_MESSAGES.drl_unimessage.Dimension.Component component = 1;
  for (unsigned int i = 0, n = this->component_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->component(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DRL_MESSAGES.drl_unimessage.Dimension)
  return target;
}

int drl_unimessage_Dimension::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DRL_MESSAGES.drl_unimessage.Dimension)
  int total_size = 0;

  // repeated .DRL_MESSAGES.drl_unimessage.Dimension.Component component = 1;
  total_size += 1 * this->component_size();
  for (int i = 0; i < this->component_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->component(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void drl_unimessage_Dimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DRL_MESSAGES.drl_unimessage.Dimension)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const drl_unimessage_Dimension* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const drl_unimessage_Dimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DRL_MESSAGES.drl_unimessage.Dimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DRL_MESSAGES.drl_unimessage.Dimension)
    MergeFrom(*source);
  }
}

void drl_unimessage_Dimension::MergeFrom(const drl_unimessage_Dimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DRL_MESSAGES.drl_unimessage.Dimension)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  component_.MergeFrom(from.component_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void drl_unimessage_Dimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DRL_MESSAGES.drl_unimessage.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void drl_unimessage_Dimension::CopyFrom(const drl_unimessage_Dimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DRL_MESSAGES.drl_unimessage.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drl_unimessage_Dimension::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->component())) return false;
  return true;
}

void drl_unimessage_Dimension::Swap(drl_unimessage_Dimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void drl_unimessage_Dimension::InternalSwap(drl_unimessage_Dimension* other) {
  component_.UnsafeArenaSwap(&other->component_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata drl_unimessage_Dimension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = drl_unimessage_Dimension_descriptor_;
  metadata.reflection = drl_unimessage_Dimension_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int drl_unimessage_RewardTerminal::kRewardFieldNumber;
const int drl_unimessage_RewardTerminal::kTerminalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

drl_unimessage_RewardTerminal::drl_unimessage_RewardTerminal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DRL_MESSAGES.drl_unimessage.RewardTerminal)
}

void drl_unimessage_RewardTerminal::InitAsDefaultInstance() {
}

drl_unimessage_RewardTerminal::drl_unimessage_RewardTerminal(const drl_unimessage_RewardTerminal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DRL_MESSAGES.drl_unimessage.RewardTerminal)
}

void drl_unimessage_RewardTerminal::SharedCtor() {
  _cached_size_ = 0;
  reward_ = 0;
  terminal_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

drl_unimessage_RewardTerminal::~drl_unimessage_RewardTerminal() {
  // @@protoc_insertion_point(destructor:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  SharedDtor();
}

void drl_unimessage_RewardTerminal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void drl_unimessage_RewardTerminal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* drl_unimessage_RewardTerminal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return drl_unimessage_RewardTerminal_descriptor_;
}

const drl_unimessage_RewardTerminal& drl_unimessage_RewardTerminal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drl_5fmessages_2eproto();
  return *default_instance_;
}

drl_unimessage_RewardTerminal* drl_unimessage_RewardTerminal::default_instance_ = NULL;

drl_unimessage_RewardTerminal* drl_unimessage_RewardTerminal::New(::google::protobuf::Arena* arena) const {
  drl_unimessage_RewardTerminal* n = new drl_unimessage_RewardTerminal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void drl_unimessage_RewardTerminal::Clear() {
// @@protoc_insertion_point(message_clear_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(drl_unimessage_RewardTerminal, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<drl_unimessage_RewardTerminal*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(reward_, terminal_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool drl_unimessage_RewardTerminal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float reward = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reward_)));
          set_has_reward();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_terminal;
        break;
      }

      // required int32 terminal = 2;
      case 2: {
        if (tag == 16) {
         parse_terminal:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &terminal_)));
          set_has_terminal();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  return false;
#undef DO_
}

void drl_unimessage_RewardTerminal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  // required float reward = 1;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->reward(), output);
  }

  // required int32 terminal = 2;
  if (has_terminal()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->terminal(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DRL_MESSAGES.drl_unimessage.RewardTerminal)
}

::google::protobuf::uint8* drl_unimessage_RewardTerminal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  // required float reward = 1;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->reward(), target);
  }

  // required int32 terminal = 2;
  if (has_terminal()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->terminal(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  return target;
}

int drl_unimessage_RewardTerminal::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  int total_size = 0;

  if (has_reward()) {
    // required float reward = 1;
    total_size += 1 + 4;
  }

  if (has_terminal()) {
    // required int32 terminal = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->terminal());
  }

  return total_size;
}
int drl_unimessage_RewardTerminal::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required float reward = 1;
    total_size += 1 + 4;

    // required int32 terminal = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->terminal());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void drl_unimessage_RewardTerminal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const drl_unimessage_RewardTerminal* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const drl_unimessage_RewardTerminal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DRL_MESSAGES.drl_unimessage.RewardTerminal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DRL_MESSAGES.drl_unimessage.RewardTerminal)
    MergeFrom(*source);
  }
}

void drl_unimessage_RewardTerminal::MergeFrom(const drl_unimessage_RewardTerminal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward()) {
      set_reward(from.reward());
    }
    if (from.has_terminal()) {
      set_terminal(from.terminal());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void drl_unimessage_RewardTerminal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void drl_unimessage_RewardTerminal::CopyFrom(const drl_unimessage_RewardTerminal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DRL_MESSAGES.drl_unimessage.RewardTerminal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drl_unimessage_RewardTerminal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void drl_unimessage_RewardTerminal::Swap(drl_unimessage_RewardTerminal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void drl_unimessage_RewardTerminal::InternalSwap(drl_unimessage_RewardTerminal* other) {
  std::swap(reward_, other->reward_);
  std::swap(terminal_, other->terminal_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata drl_unimessage_RewardTerminal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = drl_unimessage_RewardTerminal_descriptor_;
  metadata.reflection = drl_unimessage_RewardTerminal_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int drl_unimessage::kTypeFieldNumber;
const int drl_unimessage::kTimeIndexFieldNumber;
const int drl_unimessage::kNameFieldNumber;
const int drl_unimessage::kStatepartFieldNumber;
const int drl_unimessage::kActionFieldNumber;
const int drl_unimessage::kRlstateFieldNumber;
const int drl_unimessage::kMsgstrFieldNumber;
const int drl_unimessage::kDimensionFieldNumber;
const int drl_unimessage::kRwtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

drl_unimessage::drl_unimessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DRL_MESSAGES.drl_unimessage)
}

void drl_unimessage::InitAsDefaultInstance() {
  statepart_ = const_cast< ::DRL_MESSAGES::drl_unimessage_GeneralStatePart*>(&::DRL_MESSAGES::drl_unimessage_GeneralStatePart::default_instance());
  action_ = const_cast< ::DRL_MESSAGES::drl_unimessage_Action*>(&::DRL_MESSAGES::drl_unimessage_Action::default_instance());
  rlstate_ = const_cast< ::DRL_MESSAGES::drl_unimessage_RLstate*>(&::DRL_MESSAGES::drl_unimessage_RLstate::default_instance());
  dimension_ = const_cast< ::DRL_MESSAGES::drl_unimessage_Dimension*>(&::DRL_MESSAGES::drl_unimessage_Dimension::default_instance());
  rwt_ = const_cast< ::DRL_MESSAGES::drl_unimessage_RewardTerminal*>(&::DRL_MESSAGES::drl_unimessage_RewardTerminal::default_instance());
}

drl_unimessage::drl_unimessage(const drl_unimessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DRL_MESSAGES.drl_unimessage)
}

void drl_unimessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 1;
  time_index_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statepart_ = NULL;
  action_ = NULL;
  rlstate_ = NULL;
  msgstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dimension_ = NULL;
  rwt_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

drl_unimessage::~drl_unimessage() {
  // @@protoc_insertion_point(destructor:DRL_MESSAGES.drl_unimessage)
  SharedDtor();
}

void drl_unimessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete statepart_;
    delete action_;
    delete rlstate_;
    delete dimension_;
    delete rwt_;
  }
}

void drl_unimessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* drl_unimessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return drl_unimessage_descriptor_;
}

const drl_unimessage& drl_unimessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_drl_5fmessages_2eproto();
  return *default_instance_;
}

drl_unimessage* drl_unimessage::default_instance_ = NULL;

drl_unimessage* drl_unimessage::New(::google::protobuf::Arena* arena) const {
  drl_unimessage* n = new drl_unimessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void drl_unimessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DRL_MESSAGES.drl_unimessage)
  if (_has_bits_[0 / 32] & 255u) {
    type_ = 1;
    time_index_ = 0;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_statepart()) {
      if (statepart_ != NULL) statepart_->::DRL_MESSAGES::drl_unimessage_GeneralStatePart::Clear();
    }
    if (has_action()) {
      if (action_ != NULL) action_->::DRL_MESSAGES::drl_unimessage_Action::Clear();
    }
    if (has_rlstate()) {
      if (rlstate_ != NULL) rlstate_->::DRL_MESSAGES::drl_unimessage_RLstate::Clear();
    }
    if (has_msgstr()) {
      msgstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_dimension()) {
      if (dimension_ != NULL) dimension_->::DRL_MESSAGES::drl_unimessage_Dimension::Clear();
    }
  }
  if (has_rwt()) {
    if (rwt_ != NULL) rwt_->::DRL_MESSAGES::drl_unimessage_RewardTerminal::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool drl_unimessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DRL_MESSAGES.drl_unimessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .DRL_MESSAGES.drl_unimessage.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::DRL_MESSAGES::drl_unimessage_Type_IsValid(value)) {
            set_type(static_cast< ::DRL_MESSAGES::drl_unimessage_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time_index;
        break;
      }

      // required int32 time_index = 2;
      case 2: {
        if (tag == 16) {
         parse_time_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_index_)));
          set_has_time_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DRL_MESSAGES.drl_unimessage.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_statepart;
        break;
      }

      // optional .DRL_MESSAGES.drl_unimessage.GeneralStatePart statepart = 4;
      case 4: {
        if (tag == 34) {
         parse_statepart:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statepart()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_action;
        break;
      }

      // optional .DRL_MESSAGES.drl_unimessage.Action action = 5;
      case 5: {
        if (tag == 42) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_action()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_rlstate;
        break;
      }

      // optional .DRL_MESSAGES.drl_unimessage.RLstate rlstate = 6;
      case 6: {
        if (tag == 50) {
         parse_rlstate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rlstate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_msgstr;
        break;
      }

      // optional string msgstr = 7;
      case 7: {
        if (tag == 58) {
         parse_msgstr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgstr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msgstr().data(), this->msgstr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DRL_MESSAGES.drl_unimessage.msgstr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_dimension;
        break;
      }

      // optional .DRL_MESSAGES.drl_unimessage.Dimension dimension = 8;
      case 8: {
        if (tag == 66) {
         parse_dimension:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dimension()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_rwt;
        break;
      }

      // optional .DRL_MESSAGES.drl_unimessage.RewardTerminal rwt = 9;
      case 9: {
        if (tag == 74) {
         parse_rwt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rwt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DRL_MESSAGES.drl_unimessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DRL_MESSAGES.drl_unimessage)
  return false;
#undef DO_
}

void drl_unimessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DRL_MESSAGES.drl_unimessage)
  // required .DRL_MESSAGES.drl_unimessage.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required int32 time_index = 2;
  if (has_time_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->time_index(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DRL_MESSAGES.drl_unimessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional .DRL_MESSAGES.drl_unimessage.GeneralStatePart statepart = 4;
  if (has_statepart()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->statepart_, output);
  }

  // optional .DRL_MESSAGES.drl_unimessage.Action action = 5;
  if (has_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->action_, output);
  }

  // optional .DRL_MESSAGES.drl_unimessage.RLstate rlstate = 6;
  if (has_rlstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->rlstate_, output);
  }

  // optional string msgstr = 7;
  if (has_msgstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgstr().data(), this->msgstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DRL_MESSAGES.drl_unimessage.msgstr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msgstr(), output);
  }

  // optional .DRL_MESSAGES.drl_unimessage.Dimension dimension = 8;
  if (has_dimension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->dimension_, output);
  }

  // optional .DRL_MESSAGES.drl_unimessage.RewardTerminal rwt = 9;
  if (has_rwt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->rwt_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DRL_MESSAGES.drl_unimessage)
}

::google::protobuf::uint8* drl_unimessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DRL_MESSAGES.drl_unimessage)
  // required .DRL_MESSAGES.drl_unimessage.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required int32 time_index = 2;
  if (has_time_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->time_index(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DRL_MESSAGES.drl_unimessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional .DRL_MESSAGES.drl_unimessage.GeneralStatePart statepart = 4;
  if (has_statepart()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->statepart_, false, target);
  }

  // optional .DRL_MESSAGES.drl_unimessage.Action action = 5;
  if (has_action()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->action_, false, target);
  }

  // optional .DRL_MESSAGES.drl_unimessage.RLstate rlstate = 6;
  if (has_rlstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->rlstate_, false, target);
  }

  // optional string msgstr = 7;
  if (has_msgstr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgstr().data(), this->msgstr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DRL_MESSAGES.drl_unimessage.msgstr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->msgstr(), target);
  }

  // optional .DRL_MESSAGES.drl_unimessage.Dimension dimension = 8;
  if (has_dimension()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->dimension_, false, target);
  }

  // optional .DRL_MESSAGES.drl_unimessage.RewardTerminal rwt = 9;
  if (has_rwt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->rwt_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DRL_MESSAGES.drl_unimessage)
  return target;
}

int drl_unimessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:DRL_MESSAGES.drl_unimessage)
  int total_size = 0;

  if (has_type()) {
    // required .DRL_MESSAGES.drl_unimessage.Type type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_time_index()) {
    // required int32 time_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time_index());
  }

  return total_size;
}
int drl_unimessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DRL_MESSAGES.drl_unimessage)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .DRL_MESSAGES.drl_unimessage.Type type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required int32 time_index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time_index());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 252u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .DRL_MESSAGES.drl_unimessage.GeneralStatePart statepart = 4;
    if (has_statepart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->statepart_);
    }

    // optional .DRL_MESSAGES.drl_unimessage.Action action = 5;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->action_);
    }

    // optional .DRL_MESSAGES.drl_unimessage.RLstate rlstate = 6;
    if (has_rlstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rlstate_);
    }

    // optional string msgstr = 7;
    if (has_msgstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msgstr());
    }

    // optional .DRL_MESSAGES.drl_unimessage.Dimension dimension = 8;
    if (has_dimension()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dimension_);
    }

  }
  // optional .DRL_MESSAGES.drl_unimessage.RewardTerminal rwt = 9;
  if (has_rwt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rwt_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void drl_unimessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DRL_MESSAGES.drl_unimessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const drl_unimessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const drl_unimessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DRL_MESSAGES.drl_unimessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DRL_MESSAGES.drl_unimessage)
    MergeFrom(*source);
  }
}

void drl_unimessage::MergeFrom(const drl_unimessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DRL_MESSAGES.drl_unimessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_time_index()) {
      set_time_index(from.time_index());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_statepart()) {
      mutable_statepart()->::DRL_MESSAGES::drl_unimessage_GeneralStatePart::MergeFrom(from.statepart());
    }
    if (from.has_action()) {
      mutable_action()->::DRL_MESSAGES::drl_unimessage_Action::MergeFrom(from.action());
    }
    if (from.has_rlstate()) {
      mutable_rlstate()->::DRL_MESSAGES::drl_unimessage_RLstate::MergeFrom(from.rlstate());
    }
    if (from.has_msgstr()) {
      set_has_msgstr();
      msgstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgstr_);
    }
    if (from.has_dimension()) {
      mutable_dimension()->::DRL_MESSAGES::drl_unimessage_Dimension::MergeFrom(from.dimension());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_rwt()) {
      mutable_rwt()->::DRL_MESSAGES::drl_unimessage_RewardTerminal::MergeFrom(from.rwt());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void drl_unimessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DRL_MESSAGES.drl_unimessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void drl_unimessage::CopyFrom(const drl_unimessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DRL_MESSAGES.drl_unimessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool drl_unimessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_dimension()) {
    if (!this->dimension_->IsInitialized()) return false;
  }
  if (has_rwt()) {
    if (!this->rwt_->IsInitialized()) return false;
  }
  return true;
}

void drl_unimessage::Swap(drl_unimessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void drl_unimessage::InternalSwap(drl_unimessage* other) {
  std::swap(type_, other->type_);
  std::swap(time_index_, other->time_index_);
  name_.Swap(&other->name_);
  std::swap(statepart_, other->statepart_);
  std::swap(action_, other->action_);
  std::swap(rlstate_, other->rlstate_);
  msgstr_.Swap(&other->msgstr_);
  std::swap(dimension_, other->dimension_);
  std::swap(rwt_, other->rwt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata drl_unimessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = drl_unimessage_descriptor_;
  metadata.reflection = drl_unimessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// drl_unimessage_GeneralStatePart

// repeated float state = 1;
int drl_unimessage_GeneralStatePart::state_size() const {
  return state_.size();
}
void drl_unimessage_GeneralStatePart::clear_state() {
  state_.Clear();
}
 float drl_unimessage_GeneralStatePart::state(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.GeneralStatePart.state)
  return state_.Get(index);
}
 void drl_unimessage_GeneralStatePart::set_state(int index, float value) {
  state_.Set(index, value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.GeneralStatePart.state)
}
 void drl_unimessage_GeneralStatePart::add_state(float value) {
  state_.Add(value);
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.GeneralStatePart.state)
}
 const ::google::protobuf::RepeatedField< float >&
drl_unimessage_GeneralStatePart::state() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.GeneralStatePart.state)
  return state_;
}
 ::google::protobuf::RepeatedField< float >*
drl_unimessage_GeneralStatePart::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.GeneralStatePart.state)
  return &state_;
}

// repeated float first_derivative = 2;
int drl_unimessage_GeneralStatePart::first_derivative_size() const {
  return first_derivative_.size();
}
void drl_unimessage_GeneralStatePart::clear_first_derivative() {
  first_derivative_.Clear();
}
 float drl_unimessage_GeneralStatePart::first_derivative(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.GeneralStatePart.first_derivative)
  return first_derivative_.Get(index);
}
 void drl_unimessage_GeneralStatePart::set_first_derivative(int index, float value) {
  first_derivative_.Set(index, value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.GeneralStatePart.first_derivative)
}
 void drl_unimessage_GeneralStatePart::add_first_derivative(float value) {
  first_derivative_.Add(value);
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.GeneralStatePart.first_derivative)
}
 const ::google::protobuf::RepeatedField< float >&
drl_unimessage_GeneralStatePart::first_derivative() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.GeneralStatePart.first_derivative)
  return first_derivative_;
}
 ::google::protobuf::RepeatedField< float >*
drl_unimessage_GeneralStatePart::mutable_first_derivative() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.GeneralStatePart.first_derivative)
  return &first_derivative_;
}

// repeated float second_derivative = 3;
int drl_unimessage_GeneralStatePart::second_derivative_size() const {
  return second_derivative_.size();
}
void drl_unimessage_GeneralStatePart::clear_second_derivative() {
  second_derivative_.Clear();
}
 float drl_unimessage_GeneralStatePart::second_derivative(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.GeneralStatePart.second_derivative)
  return second_derivative_.Get(index);
}
 void drl_unimessage_GeneralStatePart::set_second_derivative(int index, float value) {
  second_derivative_.Set(index, value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.GeneralStatePart.second_derivative)
}
 void drl_unimessage_GeneralStatePart::add_second_derivative(float value) {
  second_derivative_.Add(value);
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.GeneralStatePart.second_derivative)
}
 const ::google::protobuf::RepeatedField< float >&
drl_unimessage_GeneralStatePart::second_derivative() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.GeneralStatePart.second_derivative)
  return second_derivative_;
}
 ::google::protobuf::RepeatedField< float >*
drl_unimessage_GeneralStatePart::mutable_second_derivative() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.GeneralStatePart.second_derivative)
  return &second_derivative_;
}

// repeated float third_deriavtive = 4;
int drl_unimessage_GeneralStatePart::third_deriavtive_size() const {
  return third_deriavtive_.size();
}
void drl_unimessage_GeneralStatePart::clear_third_deriavtive() {
  third_deriavtive_.Clear();
}
 float drl_unimessage_GeneralStatePart::third_deriavtive(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.GeneralStatePart.third_deriavtive)
  return third_deriavtive_.Get(index);
}
 void drl_unimessage_GeneralStatePart::set_third_deriavtive(int index, float value) {
  third_deriavtive_.Set(index, value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.GeneralStatePart.third_deriavtive)
}
 void drl_unimessage_GeneralStatePart::add_third_deriavtive(float value) {
  third_deriavtive_.Add(value);
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.GeneralStatePart.third_deriavtive)
}
 const ::google::protobuf::RepeatedField< float >&
drl_unimessage_GeneralStatePart::third_deriavtive() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.GeneralStatePart.third_deriavtive)
  return third_deriavtive_;
}
 ::google::protobuf::RepeatedField< float >*
drl_unimessage_GeneralStatePart::mutable_third_deriavtive() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.GeneralStatePart.third_deriavtive)
  return &third_deriavtive_;
}

// -------------------------------------------------------------------

// drl_unimessage_Action

// repeated float actions = 1;
int drl_unimessage_Action::actions_size() const {
  return actions_.size();
}
void drl_unimessage_Action::clear_actions() {
  actions_.Clear();
}
 float drl_unimessage_Action::actions(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.Action.actions)
  return actions_.Get(index);
}
 void drl_unimessage_Action::set_actions(int index, float value) {
  actions_.Set(index, value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.Action.actions)
}
 void drl_unimessage_Action::add_actions(float value) {
  actions_.Add(value);
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.Action.actions)
}
 const ::google::protobuf::RepeatedField< float >&
drl_unimessage_Action::actions() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.Action.actions)
  return actions_;
}
 ::google::protobuf::RepeatedField< float >*
drl_unimessage_Action::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.Action.actions)
  return &actions_;
}

// -------------------------------------------------------------------

// drl_unimessage_RLstate

// optional int32 sequence_index = 1;
bool drl_unimessage_RLstate::has_sequence_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void drl_unimessage_RLstate::set_has_sequence_index() {
  _has_bits_[0] |= 0x00000001u;
}
void drl_unimessage_RLstate::clear_has_sequence_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void drl_unimessage_RLstate::clear_sequence_index() {
  sequence_index_ = 0;
  clear_has_sequence_index();
}
 ::google::protobuf::int32 drl_unimessage_RLstate::sequence_index() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.RLstate.sequence_index)
  return sequence_index_;
}
 void drl_unimessage_RLstate::set_sequence_index(::google::protobuf::int32 value) {
  set_has_sequence_index();
  sequence_index_ = value;
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.RLstate.sequence_index)
}

// repeated float state = 2;
int drl_unimessage_RLstate::state_size() const {
  return state_.size();
}
void drl_unimessage_RLstate::clear_state() {
  state_.Clear();
}
 float drl_unimessage_RLstate::state(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.RLstate.state)
  return state_.Get(index);
}
 void drl_unimessage_RLstate::set_state(int index, float value) {
  state_.Set(index, value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.RLstate.state)
}
 void drl_unimessage_RLstate::add_state(float value) {
  state_.Add(value);
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.RLstate.state)
}
 const ::google::protobuf::RepeatedField< float >&
drl_unimessage_RLstate::state() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.RLstate.state)
  return state_;
}
 ::google::protobuf::RepeatedField< float >*
drl_unimessage_RLstate::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.RLstate.state)
  return &state_;
}

// repeated float action = 3;
int drl_unimessage_RLstate::action_size() const {
  return action_.size();
}
void drl_unimessage_RLstate::clear_action() {
  action_.Clear();
}
 float drl_unimessage_RLstate::action(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.RLstate.action)
  return action_.Get(index);
}
 void drl_unimessage_RLstate::set_action(int index, float value) {
  action_.Set(index, value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.RLstate.action)
}
 void drl_unimessage_RLstate::add_action(float value) {
  action_.Add(value);
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.RLstate.action)
}
 const ::google::protobuf::RepeatedField< float >&
drl_unimessage_RLstate::action() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.RLstate.action)
  return action_;
}
 ::google::protobuf::RepeatedField< float >*
drl_unimessage_RLstate::mutable_action() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.RLstate.action)
  return &action_;
}

// optional float reward = 4;
bool drl_unimessage_RLstate::has_reward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void drl_unimessage_RLstate::set_has_reward() {
  _has_bits_[0] |= 0x00000008u;
}
void drl_unimessage_RLstate::clear_has_reward() {
  _has_bits_[0] &= ~0x00000008u;
}
void drl_unimessage_RLstate::clear_reward() {
  reward_ = 0;
  clear_has_reward();
}
 float drl_unimessage_RLstate::reward() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.RLstate.reward)
  return reward_;
}
 void drl_unimessage_RLstate::set_reward(float value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.RLstate.reward)
}

// repeated .DRL_MESSAGES.drl_unimessage.GeneralStatePart observation = 5;
int drl_unimessage_RLstate::observation_size() const {
  return observation_.size();
}
void drl_unimessage_RLstate::clear_observation() {
  observation_.Clear();
}
const ::DRL_MESSAGES::drl_unimessage_GeneralStatePart& drl_unimessage_RLstate::observation(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.RLstate.observation)
  return observation_.Get(index);
}
::DRL_MESSAGES::drl_unimessage_GeneralStatePart* drl_unimessage_RLstate::mutable_observation(int index) {
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.RLstate.observation)
  return observation_.Mutable(index);
}
::DRL_MESSAGES::drl_unimessage_GeneralStatePart* drl_unimessage_RLstate::add_observation() {
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.RLstate.observation)
  return observation_.Add();
}
::google::protobuf::RepeatedPtrField< ::DRL_MESSAGES::drl_unimessage_GeneralStatePart >*
drl_unimessage_RLstate::mutable_observation() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.RLstate.observation)
  return &observation_;
}
const ::google::protobuf::RepeatedPtrField< ::DRL_MESSAGES::drl_unimessage_GeneralStatePart >&
drl_unimessage_RLstate::observation() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.RLstate.observation)
  return observation_;
}

// -------------------------------------------------------------------

// drl_unimessage_Dimension_Component

// required string component_name = 1;
bool drl_unimessage_Dimension_Component::has_component_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void drl_unimessage_Dimension_Component::set_has_component_name() {
  _has_bits_[0] |= 0x00000001u;
}
void drl_unimessage_Dimension_Component::clear_has_component_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void drl_unimessage_Dimension_Component::clear_component_name() {
  component_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_component_name();
}
 const ::std::string& drl_unimessage_Dimension_Component::component_name() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name)
  return component_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void drl_unimessage_Dimension_Component::set_component_name(const ::std::string& value) {
  set_has_component_name();
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name)
}
 void drl_unimessage_Dimension_Component::set_component_name(const char* value) {
  set_has_component_name();
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name)
}
 void drl_unimessage_Dimension_Component::set_component_name(const char* value, size_t size) {
  set_has_component_name();
  component_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name)
}
 ::std::string* drl_unimessage_Dimension_Component::mutable_component_name() {
  set_has_component_name();
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name)
  return component_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* drl_unimessage_Dimension_Component::release_component_name() {
  // @@protoc_insertion_point(field_release:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name)
  clear_has_component_name();
  return component_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void drl_unimessage_Dimension_Component::set_allocated_component_name(::std::string* component_name) {
  if (component_name != NULL) {
    set_has_component_name();
  } else {
    clear_has_component_name();
  }
  component_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), component_name);
  // @@protoc_insertion_point(field_set_allocated:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_name)
}

// repeated int32 component_dimension = 2;
int drl_unimessage_Dimension_Component::component_dimension_size() const {
  return component_dimension_.size();
}
void drl_unimessage_Dimension_Component::clear_component_dimension() {
  component_dimension_.Clear();
}
 ::google::protobuf::int32 drl_unimessage_Dimension_Component::component_dimension(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_dimension)
  return component_dimension_.Get(index);
}
 void drl_unimessage_Dimension_Component::set_component_dimension(int index, ::google::protobuf::int32 value) {
  component_dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_dimension)
}
 void drl_unimessage_Dimension_Component::add_component_dimension(::google::protobuf::int32 value) {
  component_dimension_.Add(value);
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_dimension)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
drl_unimessage_Dimension_Component::component_dimension() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_dimension)
  return component_dimension_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
drl_unimessage_Dimension_Component::mutable_component_dimension() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.Dimension.Component.component_dimension)
  return &component_dimension_;
}

// -------------------------------------------------------------------

// drl_unimessage_Dimension

// repeated .DRL_MESSAGES.drl_unimessage.Dimension.Component component = 1;
int drl_unimessage_Dimension::component_size() const {
  return component_.size();
}
void drl_unimessage_Dimension::clear_component() {
  component_.Clear();
}
const ::DRL_MESSAGES::drl_unimessage_Dimension_Component& drl_unimessage_Dimension::component(int index) const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.Dimension.component)
  return component_.Get(index);
}
::DRL_MESSAGES::drl_unimessage_Dimension_Component* drl_unimessage_Dimension::mutable_component(int index) {
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.Dimension.component)
  return component_.Mutable(index);
}
::DRL_MESSAGES::drl_unimessage_Dimension_Component* drl_unimessage_Dimension::add_component() {
  // @@protoc_insertion_point(field_add:DRL_MESSAGES.drl_unimessage.Dimension.component)
  return component_.Add();
}
::google::protobuf::RepeatedPtrField< ::DRL_MESSAGES::drl_unimessage_Dimension_Component >*
drl_unimessage_Dimension::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:DRL_MESSAGES.drl_unimessage.Dimension.component)
  return &component_;
}
const ::google::protobuf::RepeatedPtrField< ::DRL_MESSAGES::drl_unimessage_Dimension_Component >&
drl_unimessage_Dimension::component() const {
  // @@protoc_insertion_point(field_list:DRL_MESSAGES.drl_unimessage.Dimension.component)
  return component_;
}

// -------------------------------------------------------------------

// drl_unimessage_RewardTerminal

// required float reward = 1;
bool drl_unimessage_RewardTerminal::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void drl_unimessage_RewardTerminal::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
void drl_unimessage_RewardTerminal::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
void drl_unimessage_RewardTerminal::clear_reward() {
  reward_ = 0;
  clear_has_reward();
}
 float drl_unimessage_RewardTerminal::reward() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.RewardTerminal.reward)
  return reward_;
}
 void drl_unimessage_RewardTerminal::set_reward(float value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.RewardTerminal.reward)
}

// required int32 terminal = 2;
bool drl_unimessage_RewardTerminal::has_terminal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void drl_unimessage_RewardTerminal::set_has_terminal() {
  _has_bits_[0] |= 0x00000002u;
}
void drl_unimessage_RewardTerminal::clear_has_terminal() {
  _has_bits_[0] &= ~0x00000002u;
}
void drl_unimessage_RewardTerminal::clear_terminal() {
  terminal_ = 0;
  clear_has_terminal();
}
 ::google::protobuf::int32 drl_unimessage_RewardTerminal::terminal() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.RewardTerminal.terminal)
  return terminal_;
}
 void drl_unimessage_RewardTerminal::set_terminal(::google::protobuf::int32 value) {
  set_has_terminal();
  terminal_ = value;
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.RewardTerminal.terminal)
}

// -------------------------------------------------------------------

// drl_unimessage

// required .DRL_MESSAGES.drl_unimessage.Type type = 1;
bool drl_unimessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void drl_unimessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void drl_unimessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void drl_unimessage::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::DRL_MESSAGES::drl_unimessage_Type drl_unimessage::type() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.type)
  return static_cast< ::DRL_MESSAGES::drl_unimessage_Type >(type_);
}
 void drl_unimessage::set_type(::DRL_MESSAGES::drl_unimessage_Type value) {
  assert(::DRL_MESSAGES::drl_unimessage_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.type)
}

// required int32 time_index = 2;
bool drl_unimessage::has_time_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void drl_unimessage::set_has_time_index() {
  _has_bits_[0] |= 0x00000002u;
}
void drl_unimessage::clear_has_time_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void drl_unimessage::clear_time_index() {
  time_index_ = 0;
  clear_has_time_index();
}
 ::google::protobuf::int32 drl_unimessage::time_index() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.time_index)
  return time_index_;
}
 void drl_unimessage::set_time_index(::google::protobuf::int32 value) {
  set_has_time_index();
  time_index_ = value;
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.time_index)
}

// optional string name = 3;
bool drl_unimessage::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void drl_unimessage::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void drl_unimessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void drl_unimessage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& drl_unimessage::name() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void drl_unimessage::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.name)
}
 void drl_unimessage::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DRL_MESSAGES.drl_unimessage.name)
}
 void drl_unimessage::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DRL_MESSAGES.drl_unimessage.name)
}
 ::std::string* drl_unimessage::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* drl_unimessage::release_name() {
  // @@protoc_insertion_point(field_release:DRL_MESSAGES.drl_unimessage.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void drl_unimessage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DRL_MESSAGES.drl_unimessage.name)
}

// optional .DRL_MESSAGES.drl_unimessage.GeneralStatePart statepart = 4;
bool drl_unimessage::has_statepart() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void drl_unimessage::set_has_statepart() {
  _has_bits_[0] |= 0x00000008u;
}
void drl_unimessage::clear_has_statepart() {
  _has_bits_[0] &= ~0x00000008u;
}
void drl_unimessage::clear_statepart() {
  if (statepart_ != NULL) statepart_->::DRL_MESSAGES::drl_unimessage_GeneralStatePart::Clear();
  clear_has_statepart();
}
const ::DRL_MESSAGES::drl_unimessage_GeneralStatePart& drl_unimessage::statepart() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.statepart)
  return statepart_ != NULL ? *statepart_ : *default_instance_->statepart_;
}
::DRL_MESSAGES::drl_unimessage_GeneralStatePart* drl_unimessage::mutable_statepart() {
  set_has_statepart();
  if (statepart_ == NULL) {
    statepart_ = new ::DRL_MESSAGES::drl_unimessage_GeneralStatePart;
  }
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.statepart)
  return statepart_;
}
::DRL_MESSAGES::drl_unimessage_GeneralStatePart* drl_unimessage::release_statepart() {
  // @@protoc_insertion_point(field_release:DRL_MESSAGES.drl_unimessage.statepart)
  clear_has_statepart();
  ::DRL_MESSAGES::drl_unimessage_GeneralStatePart* temp = statepart_;
  statepart_ = NULL;
  return temp;
}
void drl_unimessage::set_allocated_statepart(::DRL_MESSAGES::drl_unimessage_GeneralStatePart* statepart) {
  delete statepart_;
  statepart_ = statepart;
  if (statepart) {
    set_has_statepart();
  } else {
    clear_has_statepart();
  }
  // @@protoc_insertion_point(field_set_allocated:DRL_MESSAGES.drl_unimessage.statepart)
}

// optional .DRL_MESSAGES.drl_unimessage.Action action = 5;
bool drl_unimessage::has_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void drl_unimessage::set_has_action() {
  _has_bits_[0] |= 0x00000010u;
}
void drl_unimessage::clear_has_action() {
  _has_bits_[0] &= ~0x00000010u;
}
void drl_unimessage::clear_action() {
  if (action_ != NULL) action_->::DRL_MESSAGES::drl_unimessage_Action::Clear();
  clear_has_action();
}
const ::DRL_MESSAGES::drl_unimessage_Action& drl_unimessage::action() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.action)
  return action_ != NULL ? *action_ : *default_instance_->action_;
}
::DRL_MESSAGES::drl_unimessage_Action* drl_unimessage::mutable_action() {
  set_has_action();
  if (action_ == NULL) {
    action_ = new ::DRL_MESSAGES::drl_unimessage_Action;
  }
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.action)
  return action_;
}
::DRL_MESSAGES::drl_unimessage_Action* drl_unimessage::release_action() {
  // @@protoc_insertion_point(field_release:DRL_MESSAGES.drl_unimessage.action)
  clear_has_action();
  ::DRL_MESSAGES::drl_unimessage_Action* temp = action_;
  action_ = NULL;
  return temp;
}
void drl_unimessage::set_allocated_action(::DRL_MESSAGES::drl_unimessage_Action* action) {
  delete action_;
  action_ = action;
  if (action) {
    set_has_action();
  } else {
    clear_has_action();
  }
  // @@protoc_insertion_point(field_set_allocated:DRL_MESSAGES.drl_unimessage.action)
}

// optional .DRL_MESSAGES.drl_unimessage.RLstate rlstate = 6;
bool drl_unimessage::has_rlstate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void drl_unimessage::set_has_rlstate() {
  _has_bits_[0] |= 0x00000020u;
}
void drl_unimessage::clear_has_rlstate() {
  _has_bits_[0] &= ~0x00000020u;
}
void drl_unimessage::clear_rlstate() {
  if (rlstate_ != NULL) rlstate_->::DRL_MESSAGES::drl_unimessage_RLstate::Clear();
  clear_has_rlstate();
}
const ::DRL_MESSAGES::drl_unimessage_RLstate& drl_unimessage::rlstate() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.rlstate)
  return rlstate_ != NULL ? *rlstate_ : *default_instance_->rlstate_;
}
::DRL_MESSAGES::drl_unimessage_RLstate* drl_unimessage::mutable_rlstate() {
  set_has_rlstate();
  if (rlstate_ == NULL) {
    rlstate_ = new ::DRL_MESSAGES::drl_unimessage_RLstate;
  }
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.rlstate)
  return rlstate_;
}
::DRL_MESSAGES::drl_unimessage_RLstate* drl_unimessage::release_rlstate() {
  // @@protoc_insertion_point(field_release:DRL_MESSAGES.drl_unimessage.rlstate)
  clear_has_rlstate();
  ::DRL_MESSAGES::drl_unimessage_RLstate* temp = rlstate_;
  rlstate_ = NULL;
  return temp;
}
void drl_unimessage::set_allocated_rlstate(::DRL_MESSAGES::drl_unimessage_RLstate* rlstate) {
  delete rlstate_;
  rlstate_ = rlstate;
  if (rlstate) {
    set_has_rlstate();
  } else {
    clear_has_rlstate();
  }
  // @@protoc_insertion_point(field_set_allocated:DRL_MESSAGES.drl_unimessage.rlstate)
}

// optional string msgstr = 7;
bool drl_unimessage::has_msgstr() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void drl_unimessage::set_has_msgstr() {
  _has_bits_[0] |= 0x00000040u;
}
void drl_unimessage::clear_has_msgstr() {
  _has_bits_[0] &= ~0x00000040u;
}
void drl_unimessage::clear_msgstr() {
  msgstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgstr();
}
 const ::std::string& drl_unimessage::msgstr() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.msgstr)
  return msgstr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void drl_unimessage::set_msgstr(const ::std::string& value) {
  set_has_msgstr();
  msgstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DRL_MESSAGES.drl_unimessage.msgstr)
}
 void drl_unimessage::set_msgstr(const char* value) {
  set_has_msgstr();
  msgstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DRL_MESSAGES.drl_unimessage.msgstr)
}
 void drl_unimessage::set_msgstr(const char* value, size_t size) {
  set_has_msgstr();
  msgstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DRL_MESSAGES.drl_unimessage.msgstr)
}
 ::std::string* drl_unimessage::mutable_msgstr() {
  set_has_msgstr();
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.msgstr)
  return msgstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* drl_unimessage::release_msgstr() {
  // @@protoc_insertion_point(field_release:DRL_MESSAGES.drl_unimessage.msgstr)
  clear_has_msgstr();
  return msgstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void drl_unimessage::set_allocated_msgstr(::std::string* msgstr) {
  if (msgstr != NULL) {
    set_has_msgstr();
  } else {
    clear_has_msgstr();
  }
  msgstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgstr);
  // @@protoc_insertion_point(field_set_allocated:DRL_MESSAGES.drl_unimessage.msgstr)
}

// optional .DRL_MESSAGES.drl_unimessage.Dimension dimension = 8;
bool drl_unimessage::has_dimension() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void drl_unimessage::set_has_dimension() {
  _has_bits_[0] |= 0x00000080u;
}
void drl_unimessage::clear_has_dimension() {
  _has_bits_[0] &= ~0x00000080u;
}
void drl_unimessage::clear_dimension() {
  if (dimension_ != NULL) dimension_->::DRL_MESSAGES::drl_unimessage_Dimension::Clear();
  clear_has_dimension();
}
const ::DRL_MESSAGES::drl_unimessage_Dimension& drl_unimessage::dimension() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.dimension)
  return dimension_ != NULL ? *dimension_ : *default_instance_->dimension_;
}
::DRL_MESSAGES::drl_unimessage_Dimension* drl_unimessage::mutable_dimension() {
  set_has_dimension();
  if (dimension_ == NULL) {
    dimension_ = new ::DRL_MESSAGES::drl_unimessage_Dimension;
  }
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.dimension)
  return dimension_;
}
::DRL_MESSAGES::drl_unimessage_Dimension* drl_unimessage::release_dimension() {
  // @@protoc_insertion_point(field_release:DRL_MESSAGES.drl_unimessage.dimension)
  clear_has_dimension();
  ::DRL_MESSAGES::drl_unimessage_Dimension* temp = dimension_;
  dimension_ = NULL;
  return temp;
}
void drl_unimessage::set_allocated_dimension(::DRL_MESSAGES::drl_unimessage_Dimension* dimension) {
  delete dimension_;
  dimension_ = dimension;
  if (dimension) {
    set_has_dimension();
  } else {
    clear_has_dimension();
  }
  // @@protoc_insertion_point(field_set_allocated:DRL_MESSAGES.drl_unimessage.dimension)
}

// optional .DRL_MESSAGES.drl_unimessage.RewardTerminal rwt = 9;
bool drl_unimessage::has_rwt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void drl_unimessage::set_has_rwt() {
  _has_bits_[0] |= 0x00000100u;
}
void drl_unimessage::clear_has_rwt() {
  _has_bits_[0] &= ~0x00000100u;
}
void drl_unimessage::clear_rwt() {
  if (rwt_ != NULL) rwt_->::DRL_MESSAGES::drl_unimessage_RewardTerminal::Clear();
  clear_has_rwt();
}
const ::DRL_MESSAGES::drl_unimessage_RewardTerminal& drl_unimessage::rwt() const {
  // @@protoc_insertion_point(field_get:DRL_MESSAGES.drl_unimessage.rwt)
  return rwt_ != NULL ? *rwt_ : *default_instance_->rwt_;
}
::DRL_MESSAGES::drl_unimessage_RewardTerminal* drl_unimessage::mutable_rwt() {
  set_has_rwt();
  if (rwt_ == NULL) {
    rwt_ = new ::DRL_MESSAGES::drl_unimessage_RewardTerminal;
  }
  // @@protoc_insertion_point(field_mutable:DRL_MESSAGES.drl_unimessage.rwt)
  return rwt_;
}
::DRL_MESSAGES::drl_unimessage_RewardTerminal* drl_unimessage::release_rwt() {
  // @@protoc_insertion_point(field_release:DRL_MESSAGES.drl_unimessage.rwt)
  clear_has_rwt();
  ::DRL_MESSAGES::drl_unimessage_RewardTerminal* temp = rwt_;
  rwt_ = NULL;
  return temp;
}
void drl_unimessage::set_allocated_rwt(::DRL_MESSAGES::drl_unimessage_RewardTerminal* rwt) {
  delete rwt_;
  rwt_ = rwt;
  if (rwt) {
    set_has_rwt();
  } else {
    clear_has_rwt();
  }
  // @@protoc_insertion_point(field_set_allocated:DRL_MESSAGES.drl_unimessage.rwt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DRL_MESSAGES

// @@protoc_insertion_point(global_scope)
